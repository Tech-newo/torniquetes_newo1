{"version":3,"file":"src_app_pages_signup_signup_module_ts.js","mappings":"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","sources":["./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.ts","./src/app/services/user/user.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\r\n  declarations: [SignupPage]\r\n})\r\nexport class SignupPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService } from '../../services/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss']\r\n})\r\nexport class SignupPage implements OnInit {\r\n  // The account fields for the signup form\r\n  account: {\r\n    login: string;\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    password: string;\r\n    langKey: string;\r\n  } = {\r\n    login: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    password: '',\r\n    langKey: 'en'\r\n  };\r\n\r\n  // Our translated text strings\r\n  private signupErrorString: string;\r\n  private signupSuccessString: string;\r\n  private existingUserError: string;\r\n  private invalidPasswordError: string;\r\n\r\n  constructor(\r\n    public navController: NavController,\r\n    public userService: UserService,\r\n    public toastController: ToastController,\r\n    public translateService: TranslateService\r\n  ) {\r\n    this.translateService.get(['SIGNUP_ERROR', 'SIGNUP_SUCCESS', 'EXISTING_USER_ERROR', 'INVALID_PASSWORD_ERROR']).subscribe(values => {\r\n      this.signupErrorString = values.SIGNUP_ERROR;\r\n      this.signupSuccessString = values.SIGNUP_SUCCESS;\r\n      this.existingUserError = values.EXISTING_USER_ERROR;\r\n      this.invalidPasswordError = values.INVALID_PASSWORD_ERROR;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  doSignup() {\r\n    // set login to same as email\r\n    this.account.login = this.account.email;\r\n    // Attempt to login in through our User service\r\n    this.userService.signup(this.account).subscribe(\r\n      async () => {\r\n        const toast = await this.toastController.create({\r\n          message: this.signupSuccessString,\r\n          duration: 3000,\r\n          position: 'top'\r\n        });\r\n        toast.present();\r\n      },\r\n      async response => {\r\n        // Unable to sign up\r\n        const error = JSON.parse(response.error);\r\n        let displayError = this.signupErrorString;\r\n        if (response.status === 400 && error.type.includes('already-used')) {\r\n          displayError = this.existingUserError;\r\n        } else if (\r\n          response.status === 400 &&\r\n          error.message === 'error.validation' &&\r\n          error.fieldErrors[0].field === 'password' &&\r\n          error.fieldErrors[0].message === 'Size'\r\n        ) {\r\n          displayError = this.invalidPasswordError;\r\n        }\r\n        const toast = await this.toastController.create({\r\n          message: displayError,\r\n          duration: 3000,\r\n          position: 'middle'\r\n        });\r\n        toast.present();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { ApiService } from '../api/api.service';\r\nimport { LoginService } from '../login/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private user: any;\r\n\r\n  constructor(public apiService: ApiService, public loginService: LoginService) {}\r\n\r\n  /**\r\n   * Send a POST request to our login endpoint with the data\r\n   * the user entered on the form.\r\n   */\r\n  login(accountInfo: any) {\r\n    this.loginService\r\n      .login(accountInfo)\r\n      .then(res => {\r\n        this.loggedIn(res);\r\n        return of(res);\r\n      })\r\n      .catch(err => {\r\n        console.error('ERROR', err);\r\n        return throwError(err);\r\n      });\r\n  }\r\n\r\n  findAll(): Observable<any> {\r\n    return this.apiService.get('users');\r\n  }\r\n\r\n  /**\r\n   * Send a POST request to our signup endpoint with the data\r\n   * the user entered on the form.\r\n   */\r\n  signup(accountInfo: any) {\r\n    return this.apiService.post('register', accountInfo, { responseType: 'text' as 'text' }).pipe(share());\r\n  }\r\n\r\n  /**\r\n   * Log the user out, which forgets the session\r\n   */\r\n  logout() {\r\n    this.loginService.logout();\r\n    this.user = null;\r\n  }\r\n\r\n  /**\r\n   * Process a login/signup response to store user data\r\n   */\r\n  private loggedIn(resp) {\r\n    this.user = resp.user;\r\n  }\r\n}\r\n"],"names":["Component","NavController","ToastController","TranslateService","UserService","SignupPage","constructor","navController","userService","toastController","translateService","account","login","email","firstName","lastName","password","langKey","get","subscribe","values","signupErrorString","SIGNUP_ERROR","signupSuccessString","SIGNUP_SUCCESS","existingUserError","EXISTING_USER_ERROR","invalidPasswordError","INVALID_PASSWORD_ERROR","ngOnInit","doSignup","_this","signup","_asyncToGenerator","toast","create","message","duration","position","present","_ref2","response","error","JSON","parse","displayError","status","type","includes","fieldErrors","field","_x","apply","arguments","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}